import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import numpy as np


# Choose the column to forecast (e.g., 'Value' for CO2 emissions)
target_column = 'Value'

# Fill missing values with zeros
data[target_column] = data[target_column].fillna(0)

# Create a list of unique items in the 'Item' column
unique_items = data['Item'].unique()

# Create a single plot for all linear regression predictions
plt.figure(figsize=(12, 6))
plt.xlabel('Year')
plt.ylabel(target_column)
plt.grid(True)

for item in unique_items:
    item_data = data[data['Item'] == item].copy()

    # Set 'Year' column as the input feature
    X = item_data[['Year']]

    # Set the target column for linear regression
    y = item_data[target_column]

    # Create and fit a linear regression model
    model = LinearRegression()
    model.fit(X, y)

    # Predict CO2 emissions for future years
    future_years = range(max(item_data['Year']) + 1, max(item_data['Year']) + 11)  # Next 10 years
    future_data = pd.DataFrame({'Year': future_years})
    future_predictions = model.predict(future_data)

    # Plot the linear regression predictions for the current item
    plt.plot(future_data['Year'], future_predictions, label=f'Linear Regression Prediction ({item})', linestyle='--')

# Customize the plot
plt.title(f'Combined Linear Regression Predictions for {target_column}')
plt.legend()
plt.tight_layout()
plt.show()
