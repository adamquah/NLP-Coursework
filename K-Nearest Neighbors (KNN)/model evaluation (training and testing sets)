# Use GridSearchCV to find the best parameters
grid_search = GridSearchCV(knn_model, param_grid, cv=5, scoring='accuracy')
grid_search.fit(X_train, y_train)

# Get the best estimator
best_estimator = grid_search.best_estimator_

# Use the best estimator to make predictions on the training set
y_pred_train = best_estimator.predict(X_train)

# Use the best estimator to make predictions on the test set
y_pred_test = best_estimator.predict(X_test)

# Calculate and print the accuracy on the training set
accuracy_train = round(accuracy_score(y_train, y_pred_train), 4)
print("Accuracy on Training Set:", accuracy_train)

# Calculate and print the accuracy on the test set
accuracy_test = round(accuracy_score(y_test, y_pred_test), 4)
print("Accuracy on Test Set:", accuracy_test)
